"""sqlalchemy

Revision ID: 288719f4f68a
Revises: 79d5c27b5579
Create Date: 2023-12-10 10:08:11.094662

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '288719f4f68a'
down_revision: Union[str, None] = '79d5c27b5579'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('SQLALCHEMY USERS',
    sa.Column('Name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('Created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('FOLLOWS',
    sa.Column('leaders', sa.Integer(), nullable=False),
    sa.Column('followers', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['followers'], ['SQLALCHEMY USERS.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['leaders'], ['SQLALCHEMY USERS.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('leaders', 'followers')
    )
    op.create_table('SQLALCHEMY POSTS',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('content', sa.String(), nullable=False),
    sa.Column('Published', sa.Boolean(), server_default='TRUE', nullable=False),
    sa.Column('Created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('Poster', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['Poster'], ['SQLALCHEMY USERS.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('LIKES',
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['SQLALCHEMY POSTS.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['SQLALCHEMY USERS.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('post_id', 'user_id')
    )
    op.drop_table('POSTSTABLE')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('POSTSTABLE',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"POSTSTABLE_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('Title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('Contents', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='POSTSTABLE_pkey')
    )
    op.drop_table('LIKES')
    op.drop_table('SQLALCHEMY POSTS')
    op.drop_table('FOLLOWS')
    op.drop_table('SQLALCHEMY USERS')
    # ### end Alembic commands ###
